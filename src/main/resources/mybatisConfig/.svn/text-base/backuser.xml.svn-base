<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- tblNameCN: 后台管理员表 backuser -->
<mapper namespace="backuser">
	<resultMap id="backuserBaseMap" type="java.util.HashMap">
		<result column="id" javaType="Integer" property="id" />  <!-- id -->
		<result column="username" javaType="java.lang.String" property="username" />  <!-- 用户名 -->
		<result column="password" javaType="java.lang.String" property="password" />  <!-- 密码 -->
		<result column="remark" javaType="java.lang.String" property="remark" />  <!-- 备注 -->
	</resultMap>
	
	<!-- 公共sql提取 -->
	<sql id="querySql">
		<if test="id != null"> and (u.id = #{id} ) </if>
		<if test="username != null"> and (U.username = #{username} ) </if>
		<if test="password != null"> and (U.password = #{password} ) </if>
		<if test="remark != null"> and (U.remark = #{remark} ) </if>
	</sql>
	<sql id="querySqlDim">
		<if test="id != null and id != '' "> and (U.id like '%'||#{id}||'%' ) </if>
		<if test="username != null and username != '' "> and (U.username like '%'||#{username}||'%' ) </if>
		<if test="password != null and password != '' "> and (U.password like '%'||#{password}||'%' ) </if>
		<if test="remark != null and remark != '' "> and (U.remark like '%'||#{remark}||'%' ) </if>
	</sql>
	
	<!-- 用户登录查询 -->
	<select id="login" parameterType="java.util.HashMap" resultMap="backuserBaseMap">
		select * from backuser u where 1=1 
		<include refid="querySql" />
	</select>
	 
	
	<!-- 根据条件模糊查询(用户表)信息。 -->
	<select id="select_backuser" parameterType="java.util.HashMap" resultMap="backuserBaseMap">
	<![CDATA[
     SELECT U.id,U.username,U.password,U.remark
	]]>
		from backuser u
		where 1=1
		<include refid="querySqlDim" />
		ORDER BY U.id DESC
	</select>
	<!-- 根据条件分页查询(用户表)信息 -->
	<select id="select_user_withPage" resultMap="backuserBaseMap"
		parameterType="java.util.Map">
		SELECT * FROM (
			SELECT MYROW.*, ROWNUM RN
			FROM (
			SELECT U.id,U.username,U.password,U.remark
			where 1=1
			<include refid="querySqlDim" />
		 	<![CDATA[) MYROW 
			WHERE ROWNUM <= #{_last}
			) 
		WHERE RN >= #{_begin}]]>
		ORDER BY UUID DESC
	</select>

	<!-- 根据序列号查询某个(用户表)信息。 -->
	<select id="select_user_bySeqId" parameterType="java.lang.String"
		resultMap="backuserBaseMap">
	<![CDATA[
     SELECT U.UUID,U.LOGIN_NAME,U.REAL_NAME,U.GENDER,U.CERTIFICATE_TYPE,U.CERTIFICATE_ID,U.PASSWORD,U.PWD_STATUS,U.COMMENTS,U.BELONG_ADMIN_ID,U.BRANCH_ID,U.M_USER_ID,to_char(U.M_DATE,'yyyy-mm-dd hh24:mi:ss') as M_DATE,U.R_USER_ID,to_char(U.R_DATE,'yyyy-mm-dd hh24:mi:ss') as R_DATE,to_char(U.CREATIONDATE,'yyyy-mm-dd hh24:mi:ss') as CREATIONDATE,to_char(U.MODIFYDATE,'yyyy-mm-dd hh24:mi:ss') as MODIFYDATE,to_char(U.LAST_PWDERR_DATE,'yyyy-mm-dd hh24:mi:ss') as LAST_PWDERR_DATE,to_char(U.LAST_LOGININ_DATE,'yyyy-mm-dd hh24:mi:ss') as LAST_LOGININ_DATE,to_char(U.LAST_PWDMOD_DATE,'yyyy-mm-dd hh24:mi:ss') as LAST_PWDMOD_DATE,to_char(U.LAST_PWDRESET_DATE,'yyyy-mm-dd hh24:mi:ss') as LAST_PWDRESET_DATE,U.DEVICE_UUID,U.STATE,U.EXT1,U.EXT2,U.EXT3
	]]>
		and U.UUID = #{_parameter}
	</select>

	<!-- 根据条件查询满足条件的(用户表)记录数 -->
	<select id="select_user_count" resultType="java.lang.Integer">
		SELECT COUNT(*)
	</select>

	<!-- 往(用户表)新增一条记录。 -->
	<insert id="insert_user" parameterType="java.util.HashMap">
		INSERT INTO FOC_USER
		(UUID,LOGIN_NAME,REAL_NAME,GENDER,CERTIFICATE_TYPE,CERTIFICATE_ID,PASSWORD,PWD_STATUS,COMMENTS,BELONG_ADMIN_ID,BRANCH_ID,M_USER_ID,M_DATE,R_USER_ID,R_DATE,CREATIONDATE,MODIFYDATE,LAST_PWDERR_DATE,LAST_LOGININ_DATE,LAST_PWDMOD_DATE,LAST_PWDRESET_DATE,DEVICE_UUID,STATE,EXT1,EXT2,EXT3)
		VALUES
		(#{uuid,jdbcType=VARCHAR},#{loginName,jdbcType=VARCHAR},#{realName,jdbcType=VARCHAR},#{gender,jdbcType=VARCHAR},#{certificateType,jdbcType=VARCHAR},#{certificateId,jdbcType=VARCHAR},#{password,jdbcType=VARCHAR},#{pwdStatus,jdbcType=VARCHAR},#{comments,jdbcType=VARCHAR},#{belongAdminId,jdbcType=VARCHAR},#{branchId,jdbcType=VARCHAR},#{mUserId,jdbcType=VARCHAR},to_date(#{mDate,jdbcType=DATE},'yyyy-mm-dd
		hh24:mi:ss'),#{rUserId,jdbcType=VARCHAR},to_date(#{rDate,jdbcType=DATE},'yyyy-mm-dd
		hh24:mi:ss'),to_date(#{creationdate,jdbcType=DATE},'yyyy-mm-dd
		hh24:mi:ss'),to_date(#{modifydate,jdbcType=DATE},'yyyy-mm-dd
		hh24:mi:ss'),to_date(#{lastPwderrDate,jdbcType=DATE},'yyyy-mm-dd
		hh24:mi:ss'),to_date(#{lastLogininDate,jdbcType=DATE},'yyyy-mm-dd
		hh24:mi:ss'),to_date(#{lastPwdmodDate,jdbcType=DATE},'yyyy-mm-dd
		hh24:mi:ss'),to_date(#{lastPwdresetDate,jdbcType=DATE},'yyyy-mm-dd
		hh24:mi:ss'),#{deviceUuid,jdbcType=VARCHAR},#{state,jdbcType=VARCHAR},#{ext1,jdbcType=VARCHAR},#{ext2,jdbcType=VARCHAR},#{ext3,jdbcType=VARCHAR})
	</insert>

	<!-- 更新(用户表)信息。 -->
	<update id="update_user" parameterType="java.util.HashMap">
		UPDATE FOC_USER SET UUID=#{uuid}
		<if test="loginName != null and loginName != '' "> ,LOGIN_NAME=#{loginName}</if>
		<if test="realName != null and realName != '' "> ,REAL_NAME=#{realName}</if>
		<if test="gender != null and gender != '' "> ,GENDER=#{gender}</if>
		<if test="certificateType != null and certificateType != '' "> ,CERTIFICATE_TYPE=#{certificateType}</if>
		<if test="certificateId != null and certificateId != '' "> ,CERTIFICATE_ID=#{certificateId}</if>
		<if test="password != null and password != '' "> ,PASSWORD=#{password}</if>
		<if test="pwdStatus != null and pwdStatus != '' "> ,PWD_STATUS=#{pwdStatus}</if>
		<if test="comments != null and comments != '' "> ,COMMENTS=#{comments}</if>
		<if test="belongAdminId != null and belongAdminId != '' "> ,BELONG_ADMIN_ID=#{belongAdminId}</if>
		<if test="branchId != null and branchId != '' "> ,BRANCH_ID=#{branchId}</if>
		<if test="mUserId != null and mUserId != '' "> ,M_USER_ID=#{mUserId}</if>
		<if test="mDate != null and mDate != '' "> ,M_DATE=to_date(#{mDate},'yyyy-mm-dd hh24:mi:ss')</if>
		<if test="rUserId != null and rUserId != '' "> ,R_USER_ID=#{rUserId}</if>
		<if test="rDate != null and rDate != '' "> ,R_DATE=to_date(#{rDate},'yyyy-mm-dd hh24:mi:ss')</if>
		<if test="creationdate != null and creationdate != '' "> ,CREATIONDATE=to_date(#{creationdate},'yyyy-mm-dd
			hh24:mi:ss')</if>
		<if test="modifydate != null and modifydate != '' "> ,MODIFYDATE=to_date(#{modifydate},'yyyy-mm-dd
			hh24:mi:ss')</if>
		<if test="lastPwderrDate != null and lastPwderrDate != '' "> ,LAST_PWDERR_DATE=to_date(#{lastPwderrDate},'yyyy-mm-dd
			hh24:mi:ss')</if>
		<if test="lastLogininDate != null and lastLogininDate != '' "> ,LAST_LOGININ_DATE=to_date(#{lastLogininDate},'yyyy-mm-dd
			hh24:mi:ss')</if>
		<if test="lastPwdmodDate != null and lastPwdmodDate != '' "> ,LAST_PWDMOD_DATE=to_date(#{lastPwdmodDate},'yyyy-mm-dd
			hh24:mi:ss')</if>
		<if test="lastPwdresetDate != null and lastPwdresetDate != '' ">
			,LAST_PWDRESET_DATE=to_date(#{lastPwdresetDate},'yyyy-mm-dd
			hh24:mi:ss')</if>
		<if test="deviceUuid != null and deviceUuid != '' "> ,DEVICE_UUID=#{deviceUuid}</if>
		<if test="state != null and state != '' "> ,STATE=#{state}</if>
		<if test="ext1 != null and ext1 != '' "> ,EXT1=#{ext1}</if>
		<if test="ext2 != null and ext2 != '' "> ,EXT2=#{ext2}</if>
		<if test="ext3 != null and ext3 != '' "> ,EXT3=#{ext3}</if>
		WHERE UUID=#{uuid}
	</update>

	<!-- 根据序列号删除(用户表)信息。 -->
	<delete id="delete_user" parameterType="java.lang.String">
		DELETE FROM FOC_USER
		WHERE UUID=#{_parameter}
    </delete>

</mapper>



