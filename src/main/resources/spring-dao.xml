<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
	<!-- 扫描包下所有标注@Repository的DAO组件 -->
 
	
	
	<!--  
	<bean id="propertyPlaceholder" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">  
        <property name="location" value="classpath:config.properties" />  
    </bean>  
    -->
	<context:property-placeholder location="classpath:config.properties"  />
	
	<context:component-scan base-package="com.ldp.*.dao" />
	 <!-- 定义一个 datasource 数据库连接池，这里使用了Apache DBCP，需要 commons-dbcp和commons-pool的包支持 -->  
    <!-- 这里的${...}，引用了 jdbc.properties中的内容，使用户不需要查找XML文件中有关JDBC的配置片段 -->  
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" >  
        <property name="driverClassName" value="${jdbc.driverClassName}" />  
        <property name="url">  
            <value>${jdbc.url}</value>  
        </property>  
        <property name="username">  
            <value>${jdbc.username}</value>  
        </property>  
        <property name="password">  
            <value>${jdbc.password}</value>  
        </property>  
        <property name="maxActive" value="2" />  
        <property name="initialSize" value="1" />  
        <property name="maxIdle" value="2" />  
        <property name="minIdle" value="1" />  
        <!-- 等待连接超时时间，30秒 -->  
        <property name="maxWait" value="30000" />  
    </bean>  
	
	<!--  
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close" p:driverClassName="${jdbc.driverClassName}"
		p:url="${jdbc.url}" p:username="${jdbc.username}" p:password="${jdbc.password}"
		p:validationQuery="select * from dual" />
	-->
	<!-- sylAdd解决数据库Io 异常: Connection reset by peer: socket write error;  -->

<!--	<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">-->
<!--		<property name="jndiName">-->
<!--			<value>${emanual.jndiName}</value>-->
<!--		</property>-->
<!--		<property name="jndiEnvironment">-->
<!--			<props>-->
<!--				<prop key="java.naming.factory.initial">weblogic.jndi.WLInitialContextFactory</prop>-->
<!--				<prop key="java.naming.provider.url">t3://localhost:7001</prop>-->
<!--			</props>-->
<!--		</property>-->
<!--	</bean>-->
	
	<!-- 配置Jdbc模板  -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate" p:dataSource-ref="dataSource" />
    
    <!--配置SqlSessionFactoryBean -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:mybatis.cfg.xml"/>
    </bean>
    <bean id="SqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">  
        <constructor-arg index="0" ref="sqlSessionFactory" />  
    </bean> 
    
</beans>